import requests
from datetime import datetime
import csv
import argparse


def check_host(ip_address, ssl=False):
    scheme = "https" if ssl else "http"
    url = f"{scheme}://{ip_address}/webui/logoutconfirm.html?logon_hash=1"
    
    try:
        response = requests.post(url, timeout=5)
    except requests.exceptions.Timeout:
        return f"{ip_address}, host clean"
    except Exception as e:
        return f"{ip_address}, Error: {str(e)}"
    
    if '1a80b7389ccd0a5dab' in response.text:
        return f"{ip_address}, Compromised by CVE-2023-20198"
    else:
        return f"{ip_address}, host clean"


def write_to_csv(results):
    with open(args.result_file, args.output_file_method, newline='') as csvfile:
        fieldnames = ['IP Address', 'Status', 'Timestamp']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

        # If it is a new file, write the header
        if args.output_file_method == 'w':
            writer.writeheader()

        for result in results:
            ip, status = result.split(', ')
            writer.writerow({'IP Address': ip, 'Status': status, 'Timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S')})


def read_file(file):
    lines = []
    with open(file) as f:
        lines.append(f.readline())

    return lines


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Implant Detection for Cisco vulnerability (CVE-2023-20198)')
    parser.add_argument('-i', '--input_file',
                        required=False,
                        help='Filename for input list of IPs')
    parser.add_argument('--ssl',
                        action='store_true',
                        default=False,
                        help='Set this to enable HTTPS connections')
    parser.add_argument('--result_file',
                        default='scan_results.csv',
                        help='The name of the results file')

    parser.add_argument('--overwrite',
                        dest='output_file_method',
                        action='store_const',
                        const='w',
                        default='r+',
                        help='Write behaviour of the output file. Append or overwrite.  Append is default.')

    args = parser.parse_args()
    if not args.input_file:
        ip_addresses = input("Enter comma-separated IP addresses: ").split(',')
        ip_addresses = [ip.strip() for ip in ip_addresses]  # Remove any extra spaces
    else:
        ip_addresses = read_file(args.input_file)

    ssl = args.ssl

    results = []
    for ip_address in ip_addresses:
        result = check_host(ip_address, ssl)
        print(result)
        results.append(result)

    write_to_csv(results)
    print(f"Results saved to: {args.result_file}")
